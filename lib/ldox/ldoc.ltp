<!DOCTYPE html>
<html lang="en">

<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<meta charset="utf-8">
	<title>$(ldoc.title)</title>
	<link rel="stylesheet" href="$(ldoc.css)" type="text/css" />
</head>

<body id="documentation">
	
# local no_spaces = ldoc.no_spaces
# local use_li = ldoc.use_li
# local display_name = ldoc.display_name
# local iter = ldoc.modules.iter
# local M = ldoc.markup

  <div id="header">
		<h1><img src="../img/logo.png"></img>Lugaru Documentation</h1>
    <div class="navigation">
      <ul class="global">
        <li><a href="https://github.com/jasonallen/lugaru">Github</a></li>
      </ul>
		</div>
  </div><!-- #header -->

  <section id="doc">
    <nav>
# -------- contents of project ----------
# if not ldoc.no_summary then
#   local this_mod = module and module.name
#   for kind, mods, type in ldoc.kinds() do
#     if not ldoc.kinds_allowed or ldoc.kinds_allowed[type] then
				<h1>$(kind)</h1>
				<ul>
#       for mod in mods() do
#         if mod.name == this_mod then -- highlight current module, link to others
					<li class="selected"><a href="#">$(mod.name)</a></li>
#         else
					<li class="unselected"><a href="$(ldoc.ref_to_module(mod))">$(mod.name)</a></li>
#         end
#       end
				</ul>
#     end
#   end
# end

    </nav>

  <section id="content">
    <section id="start">
      <header>
#if module then
				<h1>$(ldoc.titlecase(module.type)) <code>$(module.name)</code></h1>
# end

# if ldoc.body then -- verbatim HTML as contents; 'non-code' entries
				$(ldoc.body)
# elseif module then -- module documentation
#   ldoc.item = module  -- context for M()
				<p>$(M(module.summary))</p>
				<p>$(M(module.description))</p>
# end -- if not no_summary
      </header>

			<section id="details">
			<article>

# --- currently works for both Functions and Tables. The params field either contains
# --- function parameters or table fields.
# if module then
# local show_return = not ldoc.no_return_or_parms
# local show_parms = show_return
# for kind, items in module.kinds() do
    <h2><a name="$(no_spaces(kind))"></a>$(kind)</h2>
    $(M(module.kinds:get_section_description(kind)))
    <dl class="function">
#   for item in items() do ldoc.item = item -- provides context for M()
    <dt>
    <a name = "$(item.name)"></a>
    <strong>$(display_name(item))</strong>
    </dt>
    <dd>
# if item.summary == nil then
#   item.summary = ""
# end -- if item.summary == nil
      $(M(item.summary..' <br />'..(item.description or '')))

#     if show_parms and item.params and #item.params > 0 then
    <h3>$(module.kinds:type_of(item).subnames):</h3>
    <ul>
#       for p in iter(item.params) do
       <li><code><em>$(p)</em></code>: $(M(item.params[p]))</li>
#       end -- for
    </ul>
#     end -- if params

#     if show_return and item.ret then
#       local li,il = use_li(item.ret)
    <h3>Returns:</h3>
    <ol>
#       for r in iter(item.ret) do
          $(li)$(M(r))$(il)
#       end -- for
    </ol>
#     end -- if returns

#     if item.usage then
#       local li,il = use_li(item.usage)
    <h3>Usage:</h3>
    <ul>
#       for usage in iter(item.usage) do
				$(li)<section class="code-example"><div class="terminal-wrap"><pre><code><span class="highlight_js lua">$(usage:gsub("^%s*(.-)%s*$", "%1"))</span></code></pre></div></section>$(il)
#       end -- for
    </ul>
#     end -- if usage

#     if item.see then
#       local li,il = use_li(item.see)
    <h3>see also:</h3>
    <ul>
#       for see in iter(item.see) do
         $(li)<a href="$(ldoc.href(see))">$(see.label)</a>$(il)
#       end -- for
    </ul>
#     end -- if see
</dd>
#   end -- for items
</dl>
# end -- for kinds
# end -- for kinds

			</article>
    </section>
  </section>
</section>

    </section>

  </section><!-- #documentation -->

  <div id="footer">
    <p><a href="https://github.com/jasonallen">Â© Jason Allen</a></p>
  </div>

</body></html>
